<%- include("../../views/partials/user/header.ejs") %>
<style>
  /* Reset and Base Styles */
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Poppins', sans-serif;
    line-height: 1.6;
    color: #333;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 15px;
  }

  .hero-wrap {
    position: relative;
    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('/homeImages/banner.avif') no-repeat center center/cover;
    padding: 100px 0;
    color: #fff;
    text-align: center;
  }

  .breadcrumb {
    background: none;
    padding: 0;
    margin-bottom: 10px;
  }

  .breadcrumb-item a {
    color: #fff;
    text-decoration: none;
    opacity: 0.8;
  }

  .breadcrumb-item.active {
    color: #fff;
    opacity: 1;
  }

  .bread {
    font-size: 2.5rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .ftco-section {
    padding: 40px 0;
  }

  .cart-list {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  .cart-item {
    display: flex;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid #eee;
    transition: background 0.2s;
  }

  .cart-item:hover {
    background: #f9f9f9;
  }

  .cart-item-image img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 5px;
    margin-right: 20px;
  }

  .cart-item-details {
    flex: 1;
  }

  .cart-item-details h5 {
    font-size: 1.2rem;
    margin-bottom: 5px;
    color: #222;
  }

  .cart-item-details .text-muted {
    font-size: 0.9rem;
    margin-bottom: 5px;
  }

  .cart-item-details .text-success {
    font-size: 0.9rem;
    font-weight: 500;
  }

  .price-details {
    display: flex;
    align-items: center;
    margin: 10px 0;
  }

  .current-price {
    font-size: 1.2rem;
    font-weight: 600;
    margin-right: 10px;
  }

  .original-price {
    font-size: 0.9rem;
    text-decoration: line-through;
    color: #888;
    margin-right: 10px;
  }

  .discount {
    font-size: 0.9rem;
    color: #28a745;
    font-weight: 500;
  }

  .cart-actions {
    display: flex;
    align-items: center;
    margin-top: 10px;
  }

  .quantity-control {
    display: flex;
    align-items: center;
    margin-right: 15px;
  }

  .quantity-btn {
    width: 28px;
    height: 28px;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    line-height: 1;
    color: #333;
    cursor: pointer;
    transition: border-color 0.2s, background 0.2s, color 0.2s;
    padding: 0;
  }

  .quantity-btn:hover {
    border-color: #ff7f50;
    background: #ff7f50;
    color: #fff;
  }

  .quantity-input {
    width: 40px;
    height: 28px;
    text-align: center;
    border: 1px solid #ddd;
    border-radius: 4px;
    background: #fff;
    font-size: 1rem;
    margin: 0 10px;
    color: #333;
    outline: none;
    font-weight: 500;
  }

  .action-link {
    font-size: 0.9rem;
    text-transform: uppercase;
    text-decoration: none;
    margin-right: 15px;
  }

  .action-link.remove {
    color: #dc3545;
  }

  .cart-total {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    padding: 20px;
  }

  .cart-total h5 {
    font-size: 1.2rem;
    text-transform: uppercase;
    margin-bottom: 15px;
    color: #222;
  }

  .price-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
    font-size: 0.95rem;
  }

  .price-row.total {
    font-weight: 600;
    font-size: 1.1rem;
    color: #222;
  }

  .savings {
    text-align: center;
    color: #28a745;
    font-weight: 500;
    margin: 15px 0;
  }

  .guarantee {
    text-align: center;
    font-size: 0.85rem;
    color: #888;
    margin-bottom: 20px;
  }

  .place-order-btn {
    width: 100%;
    padding: 12px;
    background: #ff7f50;
    border: none;
    border-radius: 5px;
    color: #fff;
    font-size: 1rem;
    text-transform: uppercase;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s;
  }

  .place-order-btn:hover {
    background: #ff6347;
  }

  .place-order-btn:disabled {
    background: #ccc;
    cursor: not-allowed;
  }

  .empty-cart {
    text-align: center;
    padding: 20px;
  }

  .empty-cart p {
    font-size: 1.2rem;
    margin-bottom: 20px;
  }

  .empty-cart a {
    display: inline-block;
    padding: 10px 20px;
    background: #ff7f50;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    transition: background 0.3s;
  }

  .empty-cart a:hover {
    background: #ff6347;
  }

  .ftco-cart button, .ftco-cart .form-control {
    height: 28px !important;
    text-align: center;
    border: 1px solid rgba(0, 0, 0, 0.05) !important;
    color: #000000 !important;
    padding: 0;
    font-size: 14px;
  }
  
</style>

<div class="hero-wrap hero-bread">
  <div class="container">
    <div class="row no-gutters slider-text align-items-center justify-content-center">
      <div class="col-md-9 text-center">
        <h1 class="mb-0 bread">My Cart</h1>
      </div>
    </div>
  </div>
</div>

<section class="ftco-section ftco-cart">
  <div class="container">
    <div class="row">
      <!-- Cart Items -->
      <div class="col-md-8">
        <div class="cart-list">
          <% if (cartItems && cartItems.length > 0) { %>
            <% cartItems.forEach(item => { %>
              <div class="cart-item" data-product-id="<%= item.productId._id %>">
                <div class="cart-item-image">
                  <img src="/uploads/product-image/<%= item.productId.Images[0] || 'default.jpg' %>" alt="<%= item.productId.name %>">
                </div>
                <div class="cart-item-details">
                  <h5><%= item.productId.name %></h5>
                  <p class="text-muted seller">Seller: <%= item.productId.brand || "Generic" %></p>
                  <p class="text-muted delivery">Delivery by Thu Mar 27 | Free</p>

                  <% 
                  let stockStatus = 'in-stock';
                  let stockMessage = `In Stock (${item.productId.quantity} available)`;
                  if (!item.productId.isListed || item.productId.isDelete) {
                    stockStatus = 'out-of-stock';
                    stockMessage = 'Out of Stock';
                  } else if (item.productId.quantity <= 0) {
                    stockStatus = 'out-of-stock';
                    stockMessage = 'Out of Stock';
                  } else if (item.productId.status === 'sold-out') {
                    stockStatus = 'sold-out';
                    stockMessage = 'Sold Out';
                  } else if (item.productId.status === 'unavailable') {
                    stockStatus = 'unavailable';
                    stockMessage = 'Currently Unavailable';
                  }
                  %>
                  <p class="<%= stockStatus === 'in-stock' ? 'text-success' : 'text-danger' %> stock"><%= stockMessage %></p>
                  <div class="price-details">
                    <span class="current-price">₹<%= item.price %></span>
                    <span class="original-price">₹<%= item.productId.regularPrice %></span>
                    <% const discount = Math.round((1 - item.price / item.productId.regularPrice) * 100); %>
                    <% if (discount > 0) { %>
                      <span class="discount"><%= discount %>% Off</span>
                    <% } %>
                  </div>
                  <div class="cart-actions">
                    <div class="quantity-control">
                      <button class="quantity-btn minus" data-product-id="<%= item.productId._id %>">-</button>
                      <input type="text" class="quantity-input" value="<%= item.quantity %>" readonly>
                      <button class="quantity-btn plus" data-product-id="<%= item.productId._id %>">+</button>
                    </div>
                    <a href="/deleteCart?productId=<%= item.productId._id %>" class="action-link remove">Remove</a>
                  </div>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <div class="empty-cart">
              <p>Your cart is empty.</p>
              <a href="/shop">Continue Shopping</a>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Cart Totals -->
      <div class="col-md-4">
        <div class="cart-total">
          <h5>Price Details</h5>
          <hr>
          <% if (cartItems && cartItems.length > 0) { %>
            <div class="price-row">
              <span>Price (<span id="item-count"><%= cartItems.length %></span> items)</span>
              <span id="subtotal">₹<%= total %></span>
            </div>
            <div class="price-row">
              <span>Discount</span>
              <span class="text-success" id="discount-amount">
                <% let totalDiscount = 0; %>
                <% cartItems.forEach(item => { %>
                  <% totalDiscount += (item.productId.regularPrice - item.price) * item.quantity; %>
                <% }); %>
                -₹<%= totalDiscount %>
              </span>
            </div>
            <div class="price-row">
              <span>Delivery Charges</span>
              <span>Free</span>
            </div>
            <hr>
            <div class="price-row total">
              <span>Total Amount</span>
              <span id="cart-total">₹<%= total %></span>
            </div>
            <!-- <p class="savings">You will save ₹<span id="savings-amount"><%= totalDiscount %></span> on this order</p> -->
            <p class="guarantee">Safe & Secure Payments. Easy returns. 100% Authentic products.</p>
            
            <button class="place-order-btn">checkOut</button>
          <% } else { %>
            <div class="price-row total">
              <span>Total Amount</span>
              <span id="cart-total">₹0</span>
            </div>
            <p class="guarantee">Safe & Secure Payments. Easy returns. 100% Authentic products.</p>
            <button class="place-order-btn" disabled>checkOut</button>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> 
<script>
  document.addEventListener('DOMContentLoaded', function() {
    function updateQuantityUI(productId, quantity) {
      const item = document.querySelector(`.cart-item[data-product-id="${productId}"]`);
      const quantityInput = item.querySelector('.quantity-input');
      quantityInput.value = quantity;
    }

    function updateCartTotals(data) {
      document.querySelector('#item-count').textContent = data.cartItems.length;
      document.querySelector('#subtotal').textContent = `₹${data.originalTotal}`; 
      document.querySelector('#discount-amount').textContent = `-₹${data.totalDiscount}`;
      document.querySelector('#cart-total').textContent = `₹${data.total}`; 
      // document.querySelector('#savings-amount').textContent = data.totalDiscount;
    }

    // Increment/Decrement Quantity
    document.querySelectorAll('.quantity-btn').forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        const productId = this.getAttribute('data-product-id');
        const action = this.classList.contains('plus') ? 'increment' : 'decrement';
        this.disabled = true; 

        $.ajax({
          url: '/cartQuantity',
          method: 'POST',
          data: { productId, action },
          success: (response) => {
            if (response.success) {
              updateQuantityUI(productId, response.quantity);
              updateCartTotals(response);
              this.disabled = false; 
            }
          },
          error: (err) => {
            this.disabled = false; 
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: err.responseJSON.message,
              confirmButtonColor: '#ff7f50'
            });
          }
        });
      });
    });

    document.querySelectorAll('.action-link.remove').forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const productId = this.getAttribute('href').split('=')[1];

        this.textContent = 'Removing...';

        $.ajax({
          url: `/deleteCart?productId=${productId}`,
          method: 'GET',
          success: () => {
            location.reload();
          },
          error: (err) => {
            this.textContent = 'Remove';
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Failed to remove item from cart',
              confirmButtonColor: '#ff7f50'
            });
          }
        });
      });
    });

    document.querySelector('.place-order-btn').addEventListener('click', function() {
      if (this.disabled) return;

      $.ajax({
        url: '/cartCheckout',
        method: 'POST',
        success: () => {
          window.location.href = '/checkOut';
        },
        error: (err) => {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: err.responseJSON.message,
            confirmButtonColor: '#ff7f50',
            didClose: () => {
              window.location.reload();
            }
          });
        }
      });
    });
  });
</script>

<%- include("../../views/partials/user/footer.ejs") %>