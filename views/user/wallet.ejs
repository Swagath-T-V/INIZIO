<%- include("../../views/partials/userProfile/header.ejs") %>

<style>
    .container {
        max-width: 1200px;
        padding: 0 20px;
    }
    
    .wallet-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }
    
    .wallet-title {
        font-size: 28px;
        font-weight: 600;
        color: #111;
    }
    
    .wallet-balance {
        background: linear-gradient(135deg, #6366F1, #8B5CF6);
        border-radius: 12px;
        padding: 20px;
        color: white;
        margin-bottom: 30px;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }
    
    .balance-label {
        font-size: 16px;
        opacity: 0.9;
    }
    
    .balance-amount {
        font-size: 32px;
        font-weight: 700;
        margin: 10px 0;
    }
    
    .wallet-actions {
        display: flex;
        justify-content: space-between;
        margin-bottom: 30px;
        gap: 15px;
    }
    
    .action-btn {
        flex: 1;
        background-color: white;
        border: none;
        border-radius: 8px;
        padding: 15px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: #4F46E5;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        transition: all 0.2s ease;
    }
    
    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }
    
    .action-icon {
        font-size: 24px;
        margin-bottom: 8px;
    }
    
    .transactions {
        background-color: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
    
    .transactions-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    
    .transactions-title {
        font-size: 20px;
        font-weight: 600;
    }
    
    .view-all-btn {
        padding: 8px 15px;
        border: 1px solid #4F46E5;
        border-radius: 6px;
        background-color: white;
        cursor: pointer;
        color: #4F46E5;
        font-weight: 600;
        transition: all 0.2s ease;
    }
    
    .view-all-btn:hover {
        background-color: #4F46E5;
        color: white;
    }
    
    .transaction-table {
        width: 100%;
        border-collapse: collapse;
    }
    
    .transaction-table th {
        text-align: left;
        padding: 12px 15px;
        font-weight: 600;
        color: #4F46E5;
        background-color: #F8FAFC;
        border-bottom: 2px solid #eee;
    }
    
    .transaction-table td {
        padding: 15px;
        border-bottom: 1px solid #eee;
    }
    
    .transaction-icon {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background-color: #EEF2FF;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-right: 10px;
        color: #4F46E5;
        font-size: 16px;
    }
    
    .transaction-id {
        font-weight: 600;
    }
    
    .transaction-type {
        color: #6B7280;
    }
    
    .transaction-date {
        color: #6B7280;
    }
    
    .credit {
        color: #10B981;
        font-weight: 600;
    }
    
    .debit {
        color: #EF4444;
        font-weight: 600;
    }
    
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
        gap: 10px;
    }
    
    .page-btn {
        padding: 8px 15px;
        border: 1px solid #eee;
        border-radius: 6px;
        background-color: white;
        cursor: pointer;
        color: #4F46E5;
        font-weight: 600;
        transition: all 0.2s ease;
    }
    
    .page-btn:hover {
        background-color: #4F46E5;
        color: white;
    }
    
    .page-btn.active {
        background-color: #4F46E5;
        color: white;
    }
    
    .page-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
    
    .payment-methods {
        margin-bottom: 35px;
        margin-top: 30px;
        background-color: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
    
    .payment-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    
    .payment-title {
        font-size: 20px;
        font-weight: 600;
    }
    
    .add-amount-section {
        background: white;
        border-radius: 12px;
        padding: 20px;
    }
    
    .amount-input {
        margin-bottom: 20px;
    }
    
    .amount-label {
        display: block;
        margin-bottom: 10px;
        font-weight: 600;
        color: #111;
    }
    
    .amount-input-field {
        width: 100%;
        padding: 12px;
        border-radius: 8px;
        border: 1px solid #eee;
        font-size: 16px;
    }
    
    .add-method {
        width: 100%;
        background-color: #4F46E5;
        color: white;
        border: none;
        border-radius: 6px;
        padding: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    
    .add-method:hover {
        background-color: #4338CA;
    }
    
    @media (max-width: 768px) {
        .wallet-actions {
            flex-wrap: wrap;
        }
        
        .action-btn {
            flex: 0 0 48%;
            margin-bottom: 15px;
        }
        
        .transaction-table {
            display: block;
            overflow-x: auto;
        }
    }
</style>

<div class="container">
    <div class="wallet-header">
    </div>
    
    <div class="wallet-balance">
        <div class="balance-label">Available Balance</div>
        <div class="balance-amount"><%= wallet.balance.toFixed(2) %> <%= wallet.currency %></div>
    </div>
    
    <!-- <div class="wallet-actions">
        <button class="action-btn">
            <span class="action-icon">↑</span>
            Credited
        </button>
        <button class="action-btn">
            <span class="action-icon">↓</span>
            Debited
        </button>
    </div> -->
    
    <div class="transactions">
        <div class="transactions-header">
            <h2 class="transactions-title">Recent Transactions</h2>
            <a class="view-all-btn" href="/walletViewAll">View All</a>
        </div>
        
        <table class="transaction-table">
            <thead>
                <tr>
                    <th>Transaction ID</th>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                <% if (wallet.transactions && wallet.transactions.length > 0) { %>
                    <% wallet.transactions.forEach(transaction => { %>
                        <tr>
                            <td><span class="transaction-id"><%= transaction.transactionId %></span></td>
                            <td><span class="transaction-date"><%= new Date(transaction.date).toLocaleDateString() %></span></td>
                            <td>
                                <span class="transaction-icon"><%= transaction.type === 'Credit' ? '↓' : '↑' %></span>
                                <span class="transaction-type"><%= transaction.type %></span>
                            </td>
                            <td>
                                <span class="<%= transaction.type === 'Credit' ? 'credit' : 'debit' %>">
                                    <%= transaction.type === 'Credit' ? '+' : '-' %><%= transaction.amount.toFixed(2) %> <%= wallet.currency %>
                                </span>
                            </td>
                        </tr>
                    <% }); %>
                <% } else { %>
                    <tr>
                        <td colspan="4" style="text-align: center;">No transactions found</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>
    
    <!-- <div class="payment-methods">
        <div class="payment-header">
            <h2 class="payment-title">Add Amount to Wallet</h2>
        </div>
        
        <div class="add-amount-section">
            <form id="addAmountForm" onsubmit="return handleFormSubmit(event)" novalidate>
                <div class="amount-input">
                    <label class="amount-label">Enter Amount (<%= wallet.currency %>) <span class="text-danger">*</span></label>
                    <input type="number" class="form-control amount-input-field" name="amount" placeholder="0.00" min="0">
                    <div class="error-message" id="amount-error"></div>
                </div>
                <button type="submit" class="add-method">Add to Wallet</button>
            </form>
            <div id="message" style="margin-top: 15px; text-align: center;"></div>
        </div>
    </div> -->
</div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

function handleFormSubmit(event) {
    event.preventDefault();

    clearErrorMessage();

    if (!validateForm()) {
        return false;
    }

    const amount = document.querySelector('.amount-input-field').value;
    const messageDiv = document.getElementById('message');
    const submitButton = event.target.querySelector('.add-method');
    const originalText = submitButton.innerHTML;

    submitButton.innerHTML = 'Processing...';
    submitButton.disabled = true;

    $.ajax({

        url: '/addToWallet',
        method: 'POST',
        data: { amount: amount },
        success: function(response){
            submitButton.innerHTML = originalText;
            submitButton.disabled = false;

            if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Amount Added successfully!',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#3085d6'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/walletPage';
                        }
                    });
            }
            error: (xhr, status, error) => {
                submitButton.innerHTML = originalText;
                submitButton.disabled = false;

                let errorMessage = 'An unexpected error occurred while adding the amount';
                if (xhr.responseJSON && xhr.responseJSON.message) {
                    errorMessage = xhr.responseJSON.message; 
                }

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: errorMessage,
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#d33'
                });
                console.error('AJAX Error:', error);
            } 
        }

    })

}

function validateForm() {

    const amount = document.querySelector('.amount-input-field').value.trim();

    let isValid = true;

    if (amount === "") {
        displayErrorMessage("amount-error", "Please enter an amount");
        isValid = false;
    } else if (isNaN(amount) || parseFloat(amount) <= 0) {
        displayErrorMessage("amount-error", "Amount must be greater than 0");
        isValid = false;
    } else if (parseFloat(amount) > 10000) { 
        displayErrorMessage("amount-error", "Amount cannot exceed ₹10,000");
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessage() {
    const errorElements = document.getElementsByClassName("error-message");
    Array.from(errorElements).forEach((element) => {
        element.innerText = "";
        element.style.display = "none";
    });
}

</script>

<%- include("../../views/partials/userProfile/footer.ejs") %>