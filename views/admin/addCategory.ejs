<%- include("../../views/partials/admin/header.ejs") %>

    <style>
        .category-image {
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 5px;
        }

        .category-actions a,
        .category-actions button {
            margin-right: 5px;
        }

        .add-category-btn {
            background-color: var(--purple-light);
            color: white;
        }

        .subcategories-btn {
            background-color: #4caf50;
            color: white;
        }

        .search-container .search-btn {
            background-color: var(--purple-light);
            color: white;
        }

        .clear-btn {
            background-color: #d33;
            color: white;
            border: none;
        }

        .table-dark {
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        body.light-mode .table-dark {
            background-color: var(--gray-light);
            color: var(--text-light);
        }

        body.light-mode .table-dark thead th {
            background-color: var(--gray-light);
            color: var(--text-light);
            border-color: #dee2e6;
        }

        body.light-mode .table-dark tbody td {
            background-color: var(--gray-light);
            color: var(--text-light);
            border-color: #dee2e6;
        }

        body.light-mode h2.text-white {
            color: var(--text-light) !important;
        }

        body.light-mode .pagination .page-link {
            background-color: var(--gray-light);
            color: var(--text-light);
            border-color: #dee2e6;
        }

        body.light-mode .pagination .page-item.active .page-link {
            background-color: var(--purple-light);
            color: white;
            border-color: var(--purple-light);
        }

        .error-message {
            color: red;
            font-size: 0.9em;
        }
    </style>

    <div class="container-fluid p-4">
        <div class="row mb-4">
            <div class="col-md-12">
                <h2 class="text-white">Add New Category</h2>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8 mx-auto">
                <div class="card bg-dark text-white">
                    <div class="card-body">
                        <form id="categoryForm" onsubmit="return handleFormSubmit(event)" novalidate>
                            <div class="mb-3">
                                <label for="name" class="form-label">Category Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="name" name="name" aria-describedby="name-error" required>
                                <div class="error-message" id="name-error" style="display: none;"></div>
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control" id="description" name="description" aria-describedby="description-error" rows="3"></textarea>
                                <div class="error-message" id="description-error" style="display: none;"></div>
                            </div>

                            <div class="d-flex justify-content-between mt-4">
                                <a href="/admin/category" class="btn btn-secondary">Cancel</a>
                                <button type="submit" class="btn btn-primary add-category-btn">Save Category</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        function handleFormSubmit(event) {
            event.preventDefault();

            clearErrorMessage();

            if (!validateForm()) {
                return false;
            }

            const name = document.getElementById("name").value.trim();
            const description = document.getElementById("description").value.trim();

            const submitButton = event.target.querySelector('button[type="submit"]');
            const originalText = submitButton.innerHTML;
            submitButton.innerHTML = 'Saving...';
            submitButton.disabled = true;

            $.ajax({
                url:"/admin/addCategory",
                type:"POST",
                contentType: "application/json",
                data: JSON.stringify({ name, description }),

                success:function(response){
                    if(response.success){
                        Swal.fire({
                            icon:"success",
                            title:"Success",
                            text: response.message || "Category added successfully",
                        }).then(()=>{
                            window.location.href = response.redirectUrl || "/admin/category"
                        })
                    }else{
                        Swal.fire({
                            icon:"error",
                            title:"Error",
                            text: response.message || "An error occurred while adding the category"
                        })
                    }
                },
                complete: function() {
                    submitButton.innerHTML = originalText;
                    submitButton.disabled = false;
                }
            })
            
            return false;
        }

        function validateForm() {
            const name = document.getElementById("name").value.trim();
            const description = document.getElementById("description").value.trim();
            let isValid = true;

            if (!name) {
                displayErrorMessage("name-error", "Category name is required");
                isValid = false;
            } else if (name.length < 3) {
                displayErrorMessage("name-error", "Category name must be at least 3 characters long");
                isValid = false;
            } else if (name.length > 20) {
                displayErrorMessage("name-error", "Category name cannot exceed 20 characters");
                isValid = false;
            } else if (/^\s|\s$/.test(name)) {
                displayErrorMessage("name-error", "Category name cannot start or end with spaces");
                isValid = false;
            } else if (/\s{2,}/.test(name)) {
                displayErrorMessage("name-error", "Category name cannot contain multiple consecutive spaces");
                isValid = false;
            } else if (/-{2,}/.test(name)) {
                displayErrorMessage("name-error", "Category name cannot contain multiple consecutive hyphens");
                isValid = false;
            } else if (/^-|-$/.test(name)) {
                displayErrorMessage("name-error", "Category name cannot start or end with a hyphen");
                isValid = false;
            } else if (/[^a-zA-Z0-9\s-]/.test(name)) {
                displayErrorMessage("name-error", "Category name can only contain letters, numbers, spaces, or hyphens");
                isValid = false;
            }

            if (!description) {
                displayErrorMessage("description-error", "Description is required");
                isValid = false;
            } else if (description.length < 5) {
                displayErrorMessage("description-error", "Description must be at least 5 characters long");
                isValid = false;
            } else if (description.length > 100) {
                displayErrorMessage("description-error", "Description cannot exceed 100 characters");
                isValid = false;
            } else if (/^\s|\s$/.test(description)) {
                displayErrorMessage("description-error", "Description cannot start or end with spaces");
                isValid = false;
            } else if (/^-|-$/.test(description)) {
                displayErrorMessage("description-error", "Description cannot start or end with a hyphen");
                isValid = false;
            } else if (/-{2,}/.test(description)) {
                displayErrorMessage("description-error", "Description cannot contain multiple consecutive hyphens");
                isValid = false;
            } else if (/[^a-zA-Z0-9\s.,!?'"():;-]/.test(description) || /[.,!?'"():;-]{2,}/.test(description)) {
                displayErrorMessage("description-error", "Description can only contain letters, numbers, spaces and basic punctuation");
                isValid = false;
            }


            return isValid;
        }


        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessage() {
            const errorElements = document.getElementsByClassName("error-message");
            Array.from(errorElements).forEach((element) => {
                element.innerText = "";
                element.style.display = "none";
            });
        }
    </script>

<%- include("../../views/partials/admin/footer.ejs") %>