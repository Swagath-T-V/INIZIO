<%- include("../../views/partials/admin/header.ejs") %>

    <style>
        .user-image {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--purple-light);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }

        .status-block {
            background-color: #ff4d4d;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8em;
        }

        .status-unblock {
            background-color: #4caf50;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8em;
        }

        .add-user-btn {
            background-color: var(--purple-light);
            color: white;
        }

        .search-container {
            display: flex;
            justify-content: flex-start;
        }

        .search-btn,
        .clear-btn {
            margin-left: 10px;
            border-radius: 5px;
        }

        .clear-btn {
            background-color: #d33;
            color: white;
            border: none;
        }

        .search-btn {
            background-color: var(--purple-light);
            color: white;
            border: none;
        }

        .table {
            border-collapse: separate;
            border-spacing: 0;
        }

        body:not(.light-mode) .table {
            --bs-table-bg: var(--gray-dark);
            --bs-table-color: white;
            --bs-table-hover-bg: #2c2c2c;
            --bs-table-border-color: rgba(255, 255, 255, 0.1);
        }

        body.light-mode .table {
            --bs-table-bg: var(--gray-light);
            --bs-table-color: var(--text-light);
            --bs-table-hover-bg: #e0e0e0;
            --bs-table-border-color: rgba(0, 0, 0, 0.1);
        }

        body:not(.light-mode) .table th {
            background-color: var(--gray-dark);
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            padding: 12px 15px;
            border-bottom: 2px solid var(--purple-light);
        }

        body.light-mode .table th {
            background-color: var(--gray-light);
            color: var(--text-light);
            font-weight: 600;
            text-transform: uppercase;
            padding: 12px 15px;
            border-bottom: 2px solid var(--purple-light);
        }

        .table td {
            padding: 12px 15px;
            vertical-align: middle;
            border-bottom: 1px solid var(--bs-table-border-color);
        }

        .table tbody tr:hover {
            background-color: var(--bs-table-hover-bg);
        }

        body.light-mode .table-hover tbody tr:hover {
            background-color: #e0e0e0 !important;
            color: var(--text-light) !important;
        }

        body.light-mode .table-hover tbody tr:hover td {
            background-color: #e0e0e0 !important;
            color: var(--text-light) !important;
        }

        .table tbody tr {
            transition: background-color 0.3s ease;
        }

        body.light-mode .table tbody tr:hover td,
        body.light-mode .table tbody tr:hover th {
            color: var(--text-light) !important;
        }

        body:not(.light-mode) .table tbody tr:hover td,
        body:not(.light-mode) .table tbody tr:hover th {
            color: white !important;
        }

        .pagination .page-item.active .page-link {
            background-color: var(--purple-light) !important;
            border-color: var(--purple-light) !important;
            color: white !important;
        }

        .search-container input.form-control {
            color: rgb(7, 7, 7);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        body.light-mode .search-container input.form-control {
            background-color: #ffffff;
            color: var(--text-light);
            border: 1px solid #ced4da;
        }

        body:not(.light-mode) h2 {
            color: white;
        }

        body.light-mode h2 {
            color: var(--text-light);
        }

        body.light-mode .text-white {
            color: var(--text-light) !important;
        }

        .search-container {
            display: flex;
            justify-content: flex-start;
        }

        .search-btn,
        .clear-btn {
            margin-left: 10px;
            border-radius: 5px;
        }
    </style>

    <div class="container-fluid p-4">
        <div class="row mb-3 align-items-center">
            <div class="col-md-6">
                <h2 class="text-white">Users</h2>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="search-container d-flex">
                    <form action="/admin/users" class="d-flex w-100">
                        <input type="text" id="searchInput" class="form-control" name="search" value="<%=search%>"
                            placeholder="Search users...">
                        <button type="submit" id="searchButton" class="btn search-btn ms-2">
                            <i class="bi bi-search"></i>
                        </button>
                        <a href="/admin/users" class="btn clear-btn ms-2">
                            Clear
                        </a>
                    </form>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>AVATAR</th>
                        <th>USER NAME</th>
                        <th>EMAIL</th>
                        <th>PHONE NUMBER</th>
                        <th>DATE OF CREATION</th>
                        <th>STATUS</th>
                    </tr>
                </thead>
                <tbody id="userTableBody">
                    <% for(let i=0; i<data.length; i++){ %>
                        <tr>
                            <td>
                                <div class="user-image">
                                    <%= data[i].name.charAt(0).toUpperCase() %>
                                </div>
                            </td>
                            <td>
                                <%= data[i].name %>
                            </td>
                            <td>
                                <%= data[i].email %>
                            </td>
                            <td>
                                <%= data[i].phone %>
                            </td>
                            <td>
                                <%= data[i].createdOn.toLocaleDateString() %>
                            </td>
                            <td>
                                <% if(data[i].isBlocked===false){ %>
                                    <button id="btn-block-<%= data[i]._id %>" class="btn status-block" style="width: 80px;" onclick="confirmAction('<%= data[i]._id %>', 'block')">
                                        Block
                                    </button>
                                <% } else { %>
                                    <button id="btn-unblock-<%= data[i]._id %>" class="btn status-unblock" style="width: 80px;" onclick="confirmAction('<%= data[i]._id %>', 'unblock')">
                                        Unblock
                                    </button>
                                <% } %>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>

            <div class="container mt-3">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mb-20">
                        <% for(let i=1; i<=totalPages; i++){ %>
                            <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>">
                                    <%= i %>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <script>
        function confirmAction(userId, action) {

            // Check if dark mode is active
            const isDarkMode = !document.body.classList.contains('light-mode');

            Swal.fire({
                title: `Are you sure you want to ${action} this user?`,
                text: `This action will ${action === 'block' ? 'block' : 'unblock'} the user.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: `Yes, ${action} the user!`,
                cancelButtonText: 'Cancel',
                background: isDarkMode ? '#2c2c2c' : '#fff',
                color: isDarkMode ? '#ffffff' : '#000000'


            }).then((result) => {
                if (result.isConfirmed) {
                    // Show the spinner and disable the button while the action is being processed
                    const button = document.querySelector(`#btn-${action}-${userId}`);
                    button.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Sending...'; // Change the button text to show a spinner
                    button.disabled = true; // Disable the button to prevent multiple clicks

                    fetch(`/admin/${action}Customer?id=${userId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: `${action === 'block' ? 'Blocked' : 'Unblocked'}!`,
                                text: `The user has been successfully ${action === 'block' ? 'blocked' : 'unblocked'}.`,
                                icon: 'success',
                                confirmButtonText: 'OK',
                                background: isDarkMode ? '#2c2c2c' : '#fff',
                                color: isDarkMode ? '#ffffff' : '#000000'
                            }).then(() => {
                                window.location.href = '/admin/users';
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'There was an issue with the action. Please try again later.',
                                icon: 'error',
                                confirmButtonText: 'OK',
                                background: isDarkMode ? '#2c2c2c' : '#fff',
                                color: isDarkMode ? '#ffffff' : '#000000'
                            });
                            button.innerHTML = `${action === 'block' ? 'Block' : 'Unblock'}`;
                            button.disabled = false;
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'There was an issue with the action. Please try again later.',
                            icon: 'error',
                            confirmButtonText: 'OK',
                            background: isDarkMode ? '#2c2c2c' : '#fff',
                            color: isDarkMode ? '#ffffff' : '#000000'
                        });
                         button.innerHTML = `${action === 'block' ? 'Block' : 'Unblock'}`;
                        button.disabled = false;
                    });
                }
            });
        }

    </script>

<%- include("../../views/partials/admin/footer.ejs") %>